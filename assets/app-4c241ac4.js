var g=Object.defineProperty;var p=(h,e,t)=>e in h?g(h,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):h[e]=t;var s=(h,e,t)=>(p(h,typeof e!="symbol"?e+"":e,t),t);class S{constructor(e){s(this,"structure");s(this,"colorMap");this.structure=e,this.colorMap={R:"element_red_rectangle_glossy",G:"element_green_rectangle_glossy",Y:"element_yellow_rectangle_glossy",P:"element_purple_rectangle_glossy",S:"element_silver_rectangle_glossy",B:"element_blue_rectangle_glossy"}}}class u{constructor(){s(this,"width",64);s(this,"heigth",32);s(this,"gap",2)}}class G{constructor(e,t=1){s(this,"width",104);s(this,"height",24);s(this,"dx",0);s(this,"speed",5);s(this,"sprite","/src/assets/img/sprites/paddleRed.png");s(this,"x",0);s(this,"y",0);s(this,"hpCount",3);s(this,"hpSprite","/src/assets/img/sprites/element_red_diamond_glossy.png");s(this,"hpWidth",15);s(this,"hpHeight",15);this.reset(e,t),window.addEventListener("keydown",l=>{l.which===65?this.move("left"):l.which===68&&this.move("right")}),window.addEventListener("keyup",l=>{(l.which===65||l.which===68)&&this.move("stop")})}move(e){e==="left"&&(this.dx=-this.speed),e==="right"&&(this.dx=this.speed),e==="stop"&&(this.dx=0)}reset(e,t){t===3&&(this.speed=10),this.x=e.canvas.width/2-this.width/2,this.y=e.canvas.height-this.height-10}}class R{constructor(e,t=1){s(this,"width",22);s(this,"height",22);s(this,"dx",0);s(this,"dy",0);s(this,"color","white");s(this,"x");s(this,"y");s(this,"speed",4);s(this,"sprite","/src/assets/img/sprites/ballGrey.png");t===3&&(this.width=40,this.height=40,this.speed=10),this.x=e.x+e.width/2-this.width/2,this.y=e.y-this.height}move(){this.dx===0&&this.dy===0&&(this.dx=this.speed,this.dy=-this.speed)}}const r={level1:[[],["P","Y","S","G","S","G","S","Y","G","S","Y","G","S","Y","R"],["","S","R","B","R","R","R","R","R","R","R","B","R","S",""],["","","G","R","R","R","R","R","R","R","R","R","G",""]],level2:[["","","","","S","G","S","Y","G","S","Y","","","",""],["P","Y","S","G","S","G","S","Y","G","S","Y","G","S","Y","R"],["","","G","R","R","R","","","","R","R","R","G",""],["","S","R","B","R","R","R","R","R","R","R","B","R","S",""],["P","Y","S","G","S","G","S","Y","G","S","Y","G","S","Y","R"]],level3:[[],["P","Y","S","G","S","G","S","Y","G","S","Y","G","S","Y","R"],["","P","G","R","R","R","G","P","Y","R","R","R","G","P",""],["","S","R","B","R","R","R","R","R","R","R","B","R","S",""],["P","Y","S","G","S","G","S","Y","G","S","Y","G","S","Y","R"],["P","R","S","G","S","G","S","R","G","S","R","G","S","R","P"],["P","R","S","G","S","G","S","R","G","S","R","G","S","R","P"],["","","G","Y","","","","","","","","R","S","",""]],level4:[[],["P","Y","S","G","S","G","S","Y","G","S","Y","G","S","Y","R"],["","P","G","R","R","R","G","","Y","R","R","R","G","P",""],["","S","R","B","R","R","","","","R","R","B","R","S",""],["P","Y","S","G","S","G","S","","G","S","Y","G","S","Y","R"],["P","R","S","G","S","G","S","R","G","S","R","G","S","R","P"],["P","R","","S","","G","S","R","G","S","","Y","","R","P"],["P","R","","","","G","S","R","G","S","","","","R","P"],["P","R","","S","","G","S","R","G","S","","Y","","R","P"],["P","R","S","G","S","G","S","R","G","S","R","G","S","R","P"],["P","R","S","G","S","G","S","R","G","S","R","G","S","R","P"],["","","G","Y","","","P","P","P","","","R","S","",""]],level5:[["","","S","","","S","","","","S","","","S","",""],["P","Y","S","G","S","G","S","Y","G","S","Y","G","S","Y","R"],["","P","","R","R","R","G","P","Y","R","R","R","","P",""],["G","S","R","B","R","R","R","R","R","R","R","B","R","S","G"],["","","S","G","","G","S","Y","G","S","","G","S","",""],["P","R","S","G","S","G","S","R","G","S","R","G","S","R","P"],["","","","G","S","G","S","R","G","S","R","G","","",""],["P","R","S","G","S","G","S","","G","S","R","G","S","R","P"],["","","","","S","G","S","R","G","S","R","","","",""],["P","R","S","G","S","G","S","","G","S","R","G","S","R","P"],["","","","","","G","S","","G","S","","","","",""],["P","R","S","G","S","G","S","R","G","S","R","G","S","R","P"],["","","","","","","S","R","G","","","","","",""],["","","","","","","","R","","","","","","",""]]};class m{constructor(){s(this,"canvas");s(this,"context");s(this,"bricks");s(this,"brick");s(this,"paddle");s(this,"ball");s(this,"wallSize",12);s(this,"gameStatus",!1);s(this,"level");s(this,"currentLevel",1);s(this,"sprites");s(this,"gameModeIndex",0);s(this,"selectGameMode",1);s(this,"menu");s(this,"gameOverMenu");s(this,"totalScore",0);s(this,"levelScore",0);s(this,"checkSelect",e=>{e.select?e.el.classList.add("menu-item--select"):e.el.classList.remove("menu-item--select")});s(this,"menuItems",[{name:"Normal",event:()=>{this.changeGameMode(1),this.initLevel()},select:!1,el:null},{name:"Random Level",event:()=>{this.changeGameMode(2),this.initLevel()},select:!1,el:null},{name:"Hard Mode",event:()=>{this.changeGameMode(3),this.initLevel()},select:!1,el:null},{name:"Exit",event:()=>window.close(),select:!1,el:null}]);s(this,"gameOverList",[{name:"Try Again",event:()=>{this.currentLevel=1,this.changeGameMode(this.selectGameMode),this.initLevel()}},{name:"Main Menu",event:()=>this.changeGameMode(0)}]);s(this,"selectIndex",null);this.sprites={paddle:void 0,hp:void 0,ball:void 0,bricks:[]},this.canvas=document.querySelector("canvas"),this.context=this.canvas.getContext("2d"),window.addEventListener("keydown",e=>{e.which===32&&this.gameModeIndex!==0&&this.gameModeIndex!==4&&(this.gameStatus=!0,this.ball.move()),e.which===27&&(this.changeGameMode(0),this.gameStatus=!1,this.initLevel()),this.gameStatus||(e.preventDefault(),this.gameModeIndex===0&&this.keyDownHandler(e,this.menuItems),this.gameModeIndex===4&&this.keyDownHandler(e,this.gameOverList))}),this.initMenu(),this.initLevel(),this.loop()}keyDownHandler(e,t){const l=()=>{t.forEach(i=>{i.select=!1,this.checkSelect(i)})};if(e.which===32&&t[this.selectIndex].select&&(t[this.selectIndex].event(),l()),e.which===83||e.which===87){if(e.which===83)if(this.selectIndex===null)this.selectIndex=0;else{if(this.selectIndex>=t.length-1)return;this.selectIndex++}else if(this.selectIndex===null)this.selectIndex=t.length-1;else{if(this.selectIndex<=0)return;this.selectIndex--}l(),t[this.selectIndex].select=!0,this.checkSelect(t[this.selectIndex])}}changeGameMode(e){this.currentLevel=1,this.selectIndex=null,this.gameModeIndex=e,this.gameOverMenu&&(this.gameOverMenu.style.display="none"),e===0?(this.canvas.style.display="none",this.menu.style.display="flex"):e===4?this.gameOverMenu.style.display="flex":(this.selectGameMode=e,this.canvas.style.display="block",this.menu.style.display="none",this.gameOverMenu.style.display="none"),this.gameStatus=!1}initMenu(){var t;this.menu=document.querySelector(".menu"),this.menuHandler(this.menu,this.menuItems),this.gameOverMenu=document.querySelector(".game-over-wrap"),(t=document.querySelector(".game-field"))==null||t.appendChild(this.gameOverMenu);const e=document.querySelector(".game-over-menu");this.menuHandler(e,this.gameOverList,!0)}randomLevel(){function t(n){return Math.floor(Math.random()*n)}const l=[],i=Object.keys(this.level.colorMap);let a=[];for(let n=0;n<=t(15);n++){for(let d=0;d<15;d++)t(i.length+3)>i.length?a.push(""):a.push(i[t(i.length)]);l.push(a),a=[]}return l}initLevel(){this.levelScore=0,this.gameModeIndex===2?this.level=new S(this.randomLevel()):this.level=new S(r[`level${this.currentLevel}`]),this.brick=new u,this.bricks=[];for(let e=0;e<this.level.structure.length;e++)for(let t=0;t<this.level.structure[e].length;t++)if(this.level.structure[e][t]!==""){const l=this.level.structure[e][t],i=new Image;i.src=`/src/assets/img/sprites/${this.level.colorMap[l]}.png`,this.bricks.push({x:this.wallSize+(this.brick.width+this.brick.gap)*t,y:this.wallSize+(this.brick.heigth+this.brick.gap)*e,width:this.brick.width,height:this.brick.heigth,brickSprite:i})}this.paddle=new G(this.context,this.gameModeIndex),this.ball=new R(this.paddle,this.gameModeIndex),this.sprites.paddle=new Image,this.sprites.paddle.src=this.paddle.sprite,this.sprites.ball=new Image,this.sprites.ball.src=this.ball.sprite,this.sprites.hp=new Image,this.sprites.hp.src=this.paddle.hpSprite}createField(){this.context.beginPath(),this.context.fillStyle="rgba( 108, 108, 108, 1 )",this.context.fillRect(0,0,this.canvas.width,this.wallSize),this.context.fillRect(0,0,this.wallSize,this.canvas.height),this.context.fillRect(this.canvas.width-this.wallSize,0,this.wallSize,this.canvas.height),this.context.beginPath(),this.bricks.forEach(t=>{this.context.drawImage(t.brickSprite,t.x,t.y)}),this.context.beginPath(),this.context.drawImage(this.sprites.paddle,this.paddle.x,this.paddle.y,this.paddle.width,this.paddle.height);let e=24;for(let t=1;t<=this.paddle.hpCount;t++)this.context.beginPath(),this.context.drawImage(this.sprites.hp,this.paddle.x+e,this.paddle.y+4,this.paddle.hpWidth,this.paddle.hpHeight),e+=20;this.context.beginPath(),this.context.drawImage(this.sprites.ball,this.ball.x,this.ball.y,this.ball.width,this.ball.height)}collides(e,t){return e.x<t.x+t.width&&e.x+e.width>t.x&&e.y<t.y+t.height&&e.y+e.height>t.y}gameOver(e=!1){this.changeGameMode(4);const t=document.querySelector("#total-score"),l=document.querySelector("#level-score");t.innerHTML=this.totalScore.toString(),l.innerHTML=this.levelScore.toString(),this.totalScore=0;const i=document.querySelector(".game-over-gif"),a=document.querySelector(".game-over-winner");e?(i.style.display="none",a.style.display="block"):(i.style.display="block",a.style.display="none")}menuHandler(e,t,l=!1){t.forEach((i,a)=>{i.el=document.createElement("div"),i.el.innerHTML=i.name,i.el.classList.add("menu-item"),l&&i.el.classList.add("menu-item--game-over"),i.el.addEventListener("click",()=>{i.event()});const n=c=>{t[a].select=c},d=c=>{t.forEach(o=>{o.select=!1,this.checkSelect(o)}),c?this.selectIndex=a:this.selectIndex=null,n(c),this.checkSelect(i)};i.el.addEventListener("mouseover",()=>{d(!0)}),i.el.addEventListener("mouseout",()=>{d(!1)}),e.appendChild(i.el)})}loop(){if(requestAnimationFrame(()=>this.loop()),this.gameModeIndex!==0&&this.gameModeIndex!==4&&(this.context.clearRect(0,0,this.canvas.width,this.canvas.height),this.createField(),this.gameStatus)){this.paddle.x+=this.paddle.dx,this.paddle.x<this.wallSize?this.paddle.x=this.wallSize:this.paddle.x+this.paddle.width>this.canvas.width-this.wallSize&&(this.paddle.x=this.canvas.width-this.wallSize-this.paddle.width),this.ball.x+=this.ball.dx,this.ball.y+=this.ball.dy,this.ball.x<this.wallSize?(this.ball.x=this.wallSize,this.ball.dx*=-1):this.ball.x+this.ball.width>this.canvas.width-this.wallSize&&(this.ball.x=this.canvas.width-this.wallSize-this.ball.width,this.ball.dx*=-1),this.ball.y<this.wallSize&&(this.ball.y=this.wallSize,this.ball.dy*=-1),this.ball.y>this.canvas.height&&(this.gameStatus=!1,this.paddle.hpCount--,this.paddle.hpCount<1?setTimeout(()=>{this.gameOver()},10):(this.paddle.reset(this.context),this.ball=new R(this.paddle,this.gameModeIndex))),this.collides(this.ball,this.paddle)&&(this.ball.dy*=-1,this.ball.y=this.paddle.y-this.ball.height);for(let e=0;e<this.bricks.length;e++){const t=this.bricks[e];if(this.collides(this.ball,t)){this.bricks.splice(e,1),this.levelScore++,this.totalScore++,this.ball.y+this.ball.height-this.ball.speed<=t.y||this.ball.y>=t.y+t.height-this.ball.speed?this.ball.dy*=-1:this.ball.dx*=-1;break}}this.bricks.length<=0&&this.currentLevel<Object.keys(r).length&&(this.levelScore=0,this.gameStatus=!1,this.currentLevel++,this.initLevel()),this.bricks.length<=0&&this.currentLevel===Object.keys(r).length&&setTimeout(()=>{this.gameOver(!0)},10)}}}new m;
